Script started on 2018-10-04 11:30:11+0700


	/********Компилирование программы с отладочной информацией и без оптимизации********/
$ gcc -Wall -O0 -g -o prog tooManyMistakes.c functions.c


functions.c:5:4 warning: y is used uninitialized in this function 

	/********Запуск valgrind********/
$ valring ./prog


==2915== Memcheck, a memory error detector
==2915== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2915== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2915== Command: ./prog 
25 
==2915== HEAP SUMMARY:
==2915==     in use at exit: 40 bytes in 1 blocks
==2915==   total heap usage: 2 allocs, 1 frees, 1,064 bytes allocated
==2915== 
==2915== LEAK SUMMARY:
==2915==    definitely lost: 40 bytes in 1 blocks		/******Ошибка, утечка 40 байт памяти******/
==2915==    indirectly lost: 0 bytes in 0 blocks
==2915==      possibly lost: 0 bytes in 0 blocks
==2915==    still reachable: 0 bytes in 0 blocks
==2915==         suppressed: 0 bytes in 0 blocks
==2915== Rerun with --leak-check=full to see details of leaked memory
==2915== 
==2915== For counts of detected and suppressed errors, rerun with: -v
==2915== Use --track-origins=yes to see where uninitialised values come from
==2915== ERROR SUMMARY: 7 errors from 5 contexts (suppressed: 0 from 0)

	/********Запуск valgrind с флагом для отображения места, в котором произошла утечка памяти********/
$ valgrind--leak-check=full ./prog


==2925== Memcheck, a memory error detector
==2925== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2925== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2925== Command: ./prog 
25
==2925== HEAP SUMMARY:
==2925==     in use at exit: 40 bytes in 1 blocks
==2925==   total heap usage: 2 allocs, 1 frees, 1,064 bytes allocated
==2925== 
==2925== 40 bytes in 1 blocks are definitely lost in loss record 1 of 1
==2925==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2925==    by 0x10876A: wrongFunc (functions.c:7)     /********Функция malloc, без последующего использования free********/
==2925==    by 0x10871A: main (tooManyMistakes.c:4)
==2925== 
==2925== LEAK SUMMARY:
==2925==    definitely lost: 40 bytes in 1 blocks
==2925==    indirectly lost: 0 bytes in 0 blocks
==2925==      possibly lost: 0 bytes in 0 blocks
==2925==    still reachable: 0 bytes in 0 blocks
==2925==         suppressed: 0 bytes in 0 blocks
==2925== 
==2925== For counts of detected and suppressed errors, rerun with: -v
==2925== Use --track-origins=yes to see where uninitialised values come from
==2925== ERROR SUMMARY: 8 errors from 6 contexts (suppressed: 0 from 0)


	/********Запуск valgrind с отображением информации об обращении к неинициализированным переменным********/
$ valgrind --track-origins=yes ./prog

	
==2928== Memcheck, a memory error detector
==2928== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2928== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2928== Command: ./prog
==2928== 
==2928== Conditional jump or move depends on uninitialised value(s)
==2928==    at 0x4E988DA: vfprintf (vfprintf.c:1642)
==2928==    by 0x4EA0F25: printf (printf.c:33)
==2928==    by 0x108784: wrongFunc (functions.c:8)
==2928==    by 0x10871A: main (tooManyMistakes.c:4)
==2928==  Uninitialised value was created by a stack allocation
==2928==    at 0x108755: wrongFunc (functions.c:3)
==2928== 
==2928== Use of uninitialised value of size 8
==2928==    at 0x4E9486B: _itoa_word (_itoa.c:179)
==2928==    by 0x4E97F0D: vfprintf (vfprintf.c:1642)
==2928==    by 0x4EA0F25: printf (printf.c:33)
==2928==    by 0x108784: wrongFunc (functions.c:8)  /********В этой функции - обращение к неинициализированной переменной********/
==2928==    by 0x10871A: main (tooManyMistakes.c:4)
==2928==  Uninitialised value was created by a stack allocation
==2928==    at 0x108755: wrongFunc (functions.c:3)
==2928== 
==2928== Conditional jump or move depends on uninitialised value(s)
==2928==    at 0x4E94875: _itoa_word (_itoa.c:179)
==2928==    by 0x4E97F0D: vfprintf (vfprintf.c:1642)
==2928==    by 0x4EA0F25: printf (printf.c:33)
==2928==    by 0x108784: wrongFunc (functions.c:8)
==2928==    by 0x10871A: main (tooManyMistakes.c:4)
==2928==  Uninitialised value was created by a stack allocation
==2928==    at 0x108755: wrongFunc (functions.c:3)
==2928== 
==2928== Conditional jump or move depends on uninitialised value(s)
==2928==    at 0x4E98014: vfprintf (vfprintf.c:1642)
==2928==    by 0x4EA0F25: printf (printf.c:33)
==2928==    by 0x108784: wrongFunc (functions.c:8)
==2928==    by 0x10871A: main (tooManyMistakes.c:4)
==2928==  Uninitialised value was created by a stack allocation
==2928==    at 0x108755: wrongFunc (functions.c:3)
==2928== 
==2928== Conditional jump or move depends on uninitialised value(s)
==2928==    at 0x4E98B4C: vfprintf (vfprintf.c:1642)
==2928==    by 0x4EA0F25: printf (printf.c:33)
==2928==    by 0x108784: wrongFunc (functions.c:8)
==2928==    by 0x10871A: main (tooManyMistakes.c:4)
==2928==  Uninitialised value was created by a stack allocation
==2928==    at 0x108755: wrongFunc (functions.c:3)
==2928== 
25==2928== 
==2928== HEAP SUMMARY:
==2928==     in use at exit: 40 bytes in 1 blocks
==2928==   total heap usage: 2 allocs, 1 frees, 1,064 bytes allocated
==2928== 
==2928== LEAK SUMMARY:
==2928==    definitely lost: 40 bytes in 1 blocks
==2928==    indirectly lost: 0 bytes in 0 blocks
==2928==      possibly lost: 0 bytes in 0 blocks
==2928==    still reachable: 0 bytes in 0 blocks
==2928==         suppressed: 0 bytes in 0 blocks
==2928== Rerun with --leak-check=full to see details of leaked memory
==2928== 
==2928== For counts of detected and suppressed errors, rerun with: -v
==2928== ERROR SUMMARY: 7 errors from 5 contexts (suppressed: 0 from 0)


	/********Компиляция исправленной программы********/
$ gcc -Wall -o-O0 -g -o progFixed fixed.c fixedFunctions.c
$ valgrind ./progFixed 


==2941== Memcheck, a memory error detector
==2941== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2941== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2941== Command: ./progFixed
==2941== 
10 0.000000
10
==2941== 
==2941== HEAP SUMMARY:
==2941==     in use at exit: 0 bytes in 0 blocks
==2941==   total heap usage: 2 allocs, 2 frees, 1,064 bytes allocated
==2941== 
==2941== All heap blocks were freed -- no leaks are possible	/********Утечек памяти не обнаруженно********/
==2941== 
==2941== For counts of detected and suppressed errors, rerun with: -v
==2941== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Script done on 2018-10-04 11:33:24+0700
